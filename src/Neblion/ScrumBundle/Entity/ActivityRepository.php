<?php

namespace Neblion\ScrumBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends EntityRepository
{
    public function loadForProject(\Neblion\ScrumBundle\Entity\Project $project, $returnQuery = false, $max = 8)
    {
        $query = $this->getEntityManager()->createQuery(
                'SELECT a, p, ac, pr 
                    FROM NeblionScrumBundle:Activity a
                    INNER JOIN a.project p
                    INNER JOIN a.account ac
                    INNER JOIN ac.profile pr
                    WHERE p.id = :project_id
                    ORDER BY a.created DESC')
                ->setParameter('project_id', $project->getId());
        
        if ($returnQuery) {
            return $query;
        }

        return $query->setMaxResults($max)->getResult();
    }
    
    public function loadForAccount(\Neblion\ScrumBundle\Entity\Account $account, $returnQuery = false, $max = 8)
    {
        $query = $this->getEntityManager()->createQuery(
                'SELECT a, p, ac, pr 
                    FROM NeblionScrumBundle:Activity a
                    INNER JOIN a.project p
                    INNER JOIN a.account ac
                    INNER JOIN ac.profile pr
                    WHERE ac.id = :account_id
                    ORDER BY a.created DESC')
                ->setParameter('account_id', $account->getId());
        
        if ($returnQuery) {
            return $query;
        }

        return $query->setMaxResults($max)->getResult();
    }
    
    public function loadRelatedForAccount(\Neblion\ScrumBundle\Entity\Account $account, $returnQuery = false, $max = 8)
    {
        $query = $this->getEntityManager()->createQuery(
                'SELECT a, p, ac, pr 
                    FROM NeblionScrumBundle:Activity a
                    INNER JOIN a.project p WITH p.id IN 
                        (SELECT subp.id FROM NeblionScrumBundle:Project subp 
                        INNER JOIN subp.members subm 
                        INNER JOIN subm.account suba 
                        WHERE suba.id = :account_id)
                    INNER JOIN a.account ac
                    INNER JOIN ac.profile pr
                    ORDER BY a.created DESC')
                ->setParameter('account_id', $account->getId());
        
        if ($returnQuery) {
            return $query;
        }

        return $query->setMaxResults($max)->getResult();
    }
}
